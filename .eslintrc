{
  "extends": [
    "next/core-web-vitals",
    "eslint:all",
    "plugin:@stylistic/all-extends",
    "plugin:@typescript-eslint/all",
    "plugin:sonarjs/recommended-legacy",
    "plugin:react/all",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:jsx-a11y/strict"
  ],
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "ignorePatterns": ["public", "next.config.js"],
  "plugins": ["only-warn", "sonarjs", "sort-keys-fix", "unused-imports"],
  "rules": {
    "arrow-body-style": "off",
    "capitalized-comments": "off",
    "func-style": ["error", "declaration"],
    "id-length": ["error", { "exceptions": ["_"] }],
    "line-comment-position": "off",
    "max-classes-per-file": "off",
    "max-lines": "off",
    "max-lines-per-function": "off",
    "max-statements": "off",
    "multiline-comment-style": "off",
    "new-cap": ["error", { "capIsNewExceptions": ["GET", "NextAuth", "Notification"] }],
    "no-inline-comments": "off",
    "no-ternary": "off",
    "no-undefined": "off",
    "no-void": ["error", { "allowAsStatement": true }],
    "one-var": ["error", "never"],
    "prefer-named-capture-group": "off",
    "require-unicode-regexp": "off",
    "sort-imports": "off",
    "import/newline-after-import": "error",
    "import/no-anonymous-default-export": "off",
    "import/no-extraneous-dependencies": "error",
    "import/no-mutable-exports": "error",
    "import/no-restricted-paths": [
      "error",
      {
        "zones": [
          {
            "target": ["src/domain"],
            "from": ["src", "node_modules"],
            "except": ["domain", "shared"],
            "message": "Le domain représente le métier, il ne dépend d'aucun élément extérieur."
          },
          {
            "target": ["src/use-cases"],
            "from": ["src", "node_modules"],
            "except": ["domain", "use-cases", "shared"],
            "message": "Les use cases automatisent l'interaction entre les règles métiers et les ports représentant des éléments extérieurs."
          },
          {
            "target": ["src/gateways"],
            "from": ["src", "node_modules"],
            "except": [
              "domain",
              "use-cases",
              "gateways",
              "shared",
              "@prisma/client",
              "next-auth",
              "nodemailer",
              "mjml"
            ],
            "message": "Les gateways n'ont besoin que du domain et d'implementer les ports définis dans les use cases."
          },
          {
            "target": ["src/presenters"],
            "from": ["src", "node_modules"],
            "except": ["use-cases", "presenters", "shared"],
            "message": "Les presenters préparent les données à afficher et n'ont pas connaissance du domain ni des gateways."
          },
          {
            "target": ["src/components"],
            "from": ["src"],
            "except": ["components", "presenters", "shared", "use-cases/testHelper.ts"],
            "message": "Le front ne doit pas avoir la connaissance du back."
          }
        ]
      }
    ],
    "import/order": [
      "warn",
      {
        "groups": [
          ["builtin", "external"],
          ["internal", "parent", "sibling", "index", "object", "type"]
        ],
        "newlines-between": "always",
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": "error",
    "jsx-a11y/no-aria-hidden-on-focusable": "error",
    "jsx-a11y/lang": "error",
    "react/forbid-component-props": "off",
    "react/jsx-boolean-value": "off",
    "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    "react/jsx-indent": ["error", 2],
    "react/jsx-indent-props": ["error", 2],
    "react/jsx-max-depth": "off",
    "react/jsx-newline": "off",
    "react/jsx-no-bind": "off",
    "react/jsx-no-literals": "off",
    "react/react-in-jsx-scope": "off",
    "react/no-multi-comp": ["error", { "ignoreStateless": true }],
    "sonarjs/no-nested-functions": "off",
    "sort-keys-fix/sort-keys-fix": "error",
    "@stylistic/array-element-newline": ["error", "consistent"],
    "@stylistic/comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "imports": "always-multiline",
        "objects": "always-multiline"
      }
    ],
    "@stylistic/dot-location": ["error", "property"],
    "@stylistic/function-call-argument-newline": ["error", "consistent"],
    "@stylistic/function-paren-newline": ["error", "consistent"],
    "@stylistic/indent": ["error", 2],
    "@stylistic/lines-around-comment": "off",
    "@stylistic/lines-between-class-members": [
      "error",
      {
        "enforce": [
          { "blankLine": "always", "prev": "*", "next": "*" },
          { "blankLine": "never", "prev": "field", "next": "field" }
        ]
      }
    ],
    "@stylistic/max-len": [
      "error",
      {
        "code": 120,
        "ignoreUrls": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "@stylistic/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "none"
        }
      }
    ],
    "@stylistic/multiline-ternary": "off",
    "@stylistic/multiline-comment-style": "off",
    "@stylistic/newline-per-chained-call": ["off"],
    "@stylistic/no-confusing-arrow": "off",
    "@stylistic/no-extra-parens": ["error", "all", { "ignoreJSX": "all" }],
    "@stylistic/no-multiple-empty-lines": ["error", { "max": 1 }],
    "@stylistic/object-curly-spacing": ["error", "always"],
    "@stylistic/object-property-newline": ["error", { "allowAllPropertiesOnSameLine": true }],
    "@stylistic/operator-linebreak": "off",
    "@stylistic/padded-blocks": ["error", "never"],
    "@stylistic/quote-props": ["error", "as-needed"],
    "@stylistic/quotes": ["error", "single", { "avoidEscape": true }],
    "@stylistic/semi": ["error", "never"],
    "@stylistic/space-before-function-paren": [
      "error",
      {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }
    ],
    "@typescript-eslint/array-type": ["error", { "default": "generic", "readonly": "generic" }],
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/consistent-type-imports": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/init-declarations": "off",
    "@typescript-eslint/max-params": "off",
    "@typescript-eslint/method-signature-style": ["error", "method"],
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/no-magic-numbers": "off",
    "@typescript-eslint/no-shadow": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/switch-exhaustiveness-check": [
      "error",
      { "considerDefaultExhaustiveForUnions": true }
    ],
    "@typescript-eslint/no-misused-promises": ["error", { "checksVoidReturn": false }],
    "@typescript-eslint/no-unnecessary-type-parameters": "off",
    "@typescript-eslint/no-unsafe-type-assertion": "off",
    "@typescript-eslint/prefer-destructuring": "off",
    "@typescript-eslint/prefer-readonly-parameter-types": [
      "off",
      {
        "allow": [
          "FormEvent",
          "HTMLFormElement",
          "HTMLInputElement",
          "SubmitEvent",
          "SyntheticEvent",
          "ReactElement",
          "ChartDataset",
          "ClientSafeProvider"
        ]
      }
    ],
    "unused-imports/no-unused-imports": "error"
  },
  "overrides": [
    {
      "files": ["**/*.test.ts?(x)"],
      "extends": ["plugin:vitest/all"],
      "rules": {
        "@typescript-eslint/class-methods-use-this": "off",
        "@typescript-eslint/unbound-method": "off",
        "func-style": "off",
        "no-undef": "off",
        "vitest/max-expects": "off",
        "vitest/no-conditional-expect": "off",
        "vitest/no-hooks": "off",
        "vitest/require-hook": "off",
        "vitest/prefer-expect-assertions": "off",
        "vitest/prefer-to-be-falsy": "off",
        "vitest/prefer-to-be-truthy": "off"
      }
    },
    {
      "files": ["**/testHelper.tsx"],
      "rules": {
        "no-undef": "off"
      }
    },
    {
      "files": ["**/*.test.tsx"],
      "extends": ["plugin:testing-library/react"]
    }
  ]
}
